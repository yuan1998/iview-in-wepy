'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});


var _wepy = require('./../npm/wepy/lib/wepy.js');

var _wepy2 = _interopRequireDefault(_wepy);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var icon = function (_wepy$page) {
    _inherits(icon, _wepy$page);

    function icon() {
        _classCallCheck(this, icon);

        var _this = _possibleConstructorReturn(this, (icon.__proto__ || Object.getPrototypeOf(icon)).call(this));

        _this.config = {
            navigationBarTitleText: 'Icon 图标',
            usingComponents: {
                'i-grid': '../iview/grid/index',
                'i-icon': '../iview/icon/index'
            }
        };
        _this.data = {
            list: ['accessory', 'activity', 'activity_fill', 'add', 'addressbook_fill', 'addressbook', 'barrage_fill', 'barrage', 'browse_fill', 'browse', 'brush', 'brush_fill', 'businesscard_fill', 'businesscard', 'camera_fill', 'camera', 'clock_fill', 'clock', 'close', 'collection_fill', 'collection', 'computer_fill', 'computer', 'coordinates_fill', 'coordinates', 'coupons_fill', 'coupons', 'createtask_fill', 'createtask', 'customerservice_fill', 'customerservice', 'delete_fill', 'delete', 'document', 'document_fill', 'dynamic_fill', 'dynamic', 'editor', 'eit', 'emoji_fill', 'emoji', 'enter', 'enterinto', 'enterinto_fill', 'feedback_fill', 'feedback', 'flag_fill', 'flag', 'flashlight', 'flashlight_fill', 'fullscreen', 'group', 'group_fill', 'homepage_fill', 'homepage', 'integral_fill', 'integral', 'interactive_fill', 'interactive', 'keyboard', 'label', 'label_fill', 'like_fill', 'like', 'live_fill', 'live', 'lock_fill', 'lock', 'mail', 'mail_fill', 'message', 'message_fill', 'mine', 'mine_fill', 'mobilephone_fill', 'mobilephone', 'more', 'narrow', 'offline_fill', 'offline', 'other', 'picture_fill', 'picture', 'play', 'play_fill', 'playon_fill', 'playon', 'praise_fill', 'praise', 'prompt_fill', 'prompt', 'redpacket_fill', 'redpacket', 'refresh', 'remind_fill', 'remind', 'return', 'right', 'scan', 'send', 'service_fill', 'service', 'setup_fill', 'setup', 'share_fill', 'share', 'success_fill', 'success', 'suspend', 'switch', 'systemprompt_fill', 'systemprompt', 'tailor', 'task', 'task_fill', 'tasklist_fill', 'tasklist', 'time_fill', 'time', 'translation_fill', 'translation', 'trash', 'trash_fill', 'undo', 'video', 'video_fill', 'warning_fill', 'warning', 'search', 'searchfill', 'publishgoods_fill', 'shop_fill', 'transaction_fill', 'packup', 'unfold', 'financial_fill', 'commodity']
        };
        return _this;
    }

    return icon;
}(_wepy2.default.page);


Page(require('./../npm/wepy/lib/wepy.js').default.$createPage(icon , 'pages/icon'));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImljb24uanMiXSwibmFtZXMiOlsiaWNvbiIsImNvbmZpZyIsIm5hdmlnYXRpb25CYXJUaXRsZVRleHQiLCJ1c2luZ0NvbXBvbmVudHMiLCJkYXRhIiwibGlzdCIsIndlcHkiLCJwYWdlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0k7Ozs7Ozs7Ozs7OztJQUVxQkEsSTs7O0FBOFJqQixvQkFBYztBQUFBOztBQUFBOztBQUFBLGNBN1JkQyxNQTZSYyxHQTdSTDtBQUNMQyxvQ0FBd0IsU0FEbkI7QUFFTEMsNkJBQWlCO0FBQ2IsMEJBQVUscUJBREc7QUFFYiwwQkFBVTtBQUZHO0FBRlosU0E2Uks7QUFBQSxjQXJSZEMsSUFxUmMsR0FyUlA7QUFDSEMsa0JBQU0sQ0FDRixXQURFLEVBR0EsVUFIQSxFQUtBLGVBTEEsRUFPQSxLQVBBLEVBU0Esa0JBVEEsRUFXQSxhQVhBLEVBYUEsY0FiQSxFQWVBLFNBZkEsRUFpQkEsYUFqQkEsRUFtQkEsUUFuQkEsRUFxQkEsT0FyQkEsRUF1QkEsWUF2QkEsRUF5QkEsbUJBekJBLEVBMkJBLGNBM0JBLEVBNkJBLGFBN0JBLEVBK0JBLFFBL0JBLEVBaUNBLFlBakNBLEVBbUNBLE9BbkNBLEVBcUNBLE9BckNBLEVBdUNBLGlCQXZDQSxFQXlDQSxZQXpDQSxFQTJDQSxlQTNDQSxFQTZDQSxVQTdDQSxFQStDQSxrQkEvQ0EsRUFpREEsYUFqREEsRUFtREEsY0FuREEsRUFxREEsU0FyREEsRUF1REEsaUJBdkRBLEVBeURBLFlBekRBLEVBMkRBLHNCQTNEQSxFQTZEQSxpQkE3REEsRUErREEsYUEvREEsRUFpRUEsUUFqRUEsRUFtRUEsVUFuRUEsRUFxRUEsZUFyRUEsRUF1RUEsY0F2RUEsRUF5RUEsU0F6RUEsRUEyRUEsUUEzRUEsRUE2RUEsS0E3RUEsRUErRUEsWUEvRUEsRUFpRkEsT0FqRkEsRUFtRkEsT0FuRkEsRUFxRkEsV0FyRkEsRUF1RkEsZ0JBdkZBLEVBeUZBLGVBekZBLEVBMkZBLFVBM0ZBLEVBNkZBLFdBN0ZBLEVBK0ZBLE1BL0ZBLEVBaUdBLFlBakdBLEVBbUdBLGlCQW5HQSxFQXFHQSxZQXJHQSxFQXVHQSxPQXZHQSxFQXlHQSxZQXpHQSxFQTJHQSxlQTNHQSxFQTZHQSxVQTdHQSxFQStHQSxlQS9HQSxFQWlIQSxVQWpIQSxFQW1IQSxrQkFuSEEsRUFxSEEsYUFySEEsRUF1SEEsVUF2SEEsRUF5SEEsT0F6SEEsRUEySEEsWUEzSEEsRUE2SEEsV0E3SEEsRUErSEEsTUEvSEEsRUFpSUEsV0FqSUEsRUFtSUEsTUFuSUEsRUFxSUEsV0FySUEsRUF1SUEsTUF2SUEsRUF5SUEsTUF6SUEsRUEySUEsV0EzSUEsRUE2SUEsU0E3SUEsRUErSUEsY0EvSUEsRUFpSkEsTUFqSkEsRUFtSkEsV0FuSkEsRUFxSkEsa0JBckpBLEVBdUpBLGFBdkpBLEVBeUpBLE1BekpBLEVBMkpBLFFBM0pBLEVBNkpBLGNBN0pBLEVBK0pBLFNBL0pBLEVBaUtBLE9BaktBLEVBbUtBLGNBbktBLEVBcUtBLFNBcktBLEVBdUtBLE1BdktBLEVBeUtBLFdBektBLEVBMktBLGFBM0tBLEVBNktBLFFBN0tBLEVBK0tBLGFBL0tBLEVBaUxBLFFBakxBLEVBbUxBLGFBbkxBLEVBcUxBLFFBckxBLEVBdUxBLGdCQXZMQSxFQXlMQSxXQXpMQSxFQTJMQSxTQTNMQSxFQTZMQSxhQTdMQSxFQStMQSxRQS9MQSxFQWlNQSxRQWpNQSxFQW1NQSxPQW5NQSxFQXFNQSxNQXJNQSxFQXVNQSxNQXZNQSxFQXlNQSxjQXpNQSxFQTJNQSxTQTNNQSxFQTZNQSxZQTdNQSxFQStNQSxPQS9NQSxFQWlOQSxZQWpOQSxFQW1OQSxPQW5OQSxFQXFOQSxjQXJOQSxFQXVOQSxTQXZOQSxFQXlOQSxTQXpOQSxFQTJOQSxRQTNOQSxFQTZOQSxtQkE3TkEsRUErTkEsY0EvTkEsRUFpT0EsUUFqT0EsRUFtT0EsTUFuT0EsRUFxT0EsV0FyT0EsRUF1T0EsZUF2T0EsRUF5T0EsVUF6T0EsRUEyT0EsV0EzT0EsRUE2T0EsTUE3T0EsRUErT0Esa0JBL09BLEVBaVBBLGFBalBBLEVBbVBBLE9BblBBLEVBcVBBLFlBclBBLEVBdVBBLE1BdlBBLEVBeVBBLE9BelBBLEVBMlBBLFlBM1BBLEVBNlBBLGNBN1BBLEVBK1BBLFNBL1BBLEVBaVFBLFFBalFBLEVBbVFBLFlBblFBLEVBcVFBLG1CQXJRQSxFQXVRQSxXQXZRQSxFQXlRQSxrQkF6UUEsRUEyUUEsUUEzUUEsRUE2UUEsUUE3UUEsRUErUUEsZ0JBL1FBLEVBaVJBLFdBalJBO0FBREgsU0FxUk87QUFBQTtBQUViOzs7RUFoUzZCQyxlQUFLQyxJOztrQkFBbEJQLEkiLCJmaWxlIjoiaWNvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuICAgIGltcG9ydCB3ZXB5IGZyb20gJ3dlcHknXG5cbiAgICBleHBvcnQgZGVmYXVsdCBjbGFzcyBpY29uIGV4dGVuZHMgd2VweS5wYWdlIHtcbiAgICAgICAgY29uZmlnID0ge1xuICAgICAgICAgICAgbmF2aWdhdGlvbkJhclRpdGxlVGV4dDogJ0ljb24g5Zu+5qCHJyxcbiAgICAgICAgICAgIHVzaW5nQ29tcG9uZW50czoge1xuICAgICAgICAgICAgICAgICdpLWdyaWQnOiAnLi4vaXZpZXcvZ3JpZC9pbmRleCcsXG4gICAgICAgICAgICAgICAgJ2ktaWNvbic6ICcuLi9pdmlldy9pY29uL2luZGV4JyxcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGRhdGEgPSB7XG4gICAgICAgICAgICBsaXN0OiBbXG4gICAgICAgICAgICAgICAgJ2FjY2Vzc29yeSdcblxuICAgICAgICAgICAgICAgICwgJ2FjdGl2aXR5J1xuXG4gICAgICAgICAgICAgICAgLCAnYWN0aXZpdHlfZmlsbCdcblxuICAgICAgICAgICAgICAgICwgJ2FkZCdcblxuICAgICAgICAgICAgICAgICwgJ2FkZHJlc3Nib29rX2ZpbGwnXG5cbiAgICAgICAgICAgICAgICAsICdhZGRyZXNzYm9vaydcblxuICAgICAgICAgICAgICAgICwgJ2JhcnJhZ2VfZmlsbCdcblxuICAgICAgICAgICAgICAgICwgJ2JhcnJhZ2UnXG5cbiAgICAgICAgICAgICAgICAsICdicm93c2VfZmlsbCdcblxuICAgICAgICAgICAgICAgICwgJ2Jyb3dzZSdcblxuICAgICAgICAgICAgICAgICwgJ2JydXNoJ1xuXG4gICAgICAgICAgICAgICAgLCAnYnJ1c2hfZmlsbCdcblxuICAgICAgICAgICAgICAgICwgJ2J1c2luZXNzY2FyZF9maWxsJ1xuXG4gICAgICAgICAgICAgICAgLCAnYnVzaW5lc3NjYXJkJ1xuXG4gICAgICAgICAgICAgICAgLCAnY2FtZXJhX2ZpbGwnXG5cbiAgICAgICAgICAgICAgICAsICdjYW1lcmEnXG5cbiAgICAgICAgICAgICAgICAsICdjbG9ja19maWxsJ1xuXG4gICAgICAgICAgICAgICAgLCAnY2xvY2snXG5cbiAgICAgICAgICAgICAgICAsICdjbG9zZSdcblxuICAgICAgICAgICAgICAgICwgJ2NvbGxlY3Rpb25fZmlsbCdcblxuICAgICAgICAgICAgICAgICwgJ2NvbGxlY3Rpb24nXG5cbiAgICAgICAgICAgICAgICAsICdjb21wdXRlcl9maWxsJ1xuXG4gICAgICAgICAgICAgICAgLCAnY29tcHV0ZXInXG5cbiAgICAgICAgICAgICAgICAsICdjb29yZGluYXRlc19maWxsJ1xuXG4gICAgICAgICAgICAgICAgLCAnY29vcmRpbmF0ZXMnXG5cbiAgICAgICAgICAgICAgICAsICdjb3Vwb25zX2ZpbGwnXG5cbiAgICAgICAgICAgICAgICAsICdjb3Vwb25zJ1xuXG4gICAgICAgICAgICAgICAgLCAnY3JlYXRldGFza19maWxsJ1xuXG4gICAgICAgICAgICAgICAgLCAnY3JlYXRldGFzaydcblxuICAgICAgICAgICAgICAgICwgJ2N1c3RvbWVyc2VydmljZV9maWxsJ1xuXG4gICAgICAgICAgICAgICAgLCAnY3VzdG9tZXJzZXJ2aWNlJ1xuXG4gICAgICAgICAgICAgICAgLCAnZGVsZXRlX2ZpbGwnXG5cbiAgICAgICAgICAgICAgICAsICdkZWxldGUnXG5cbiAgICAgICAgICAgICAgICAsICdkb2N1bWVudCdcblxuICAgICAgICAgICAgICAgICwgJ2RvY3VtZW50X2ZpbGwnXG5cbiAgICAgICAgICAgICAgICAsICdkeW5hbWljX2ZpbGwnXG5cbiAgICAgICAgICAgICAgICAsICdkeW5hbWljJ1xuXG4gICAgICAgICAgICAgICAgLCAnZWRpdG9yJ1xuXG4gICAgICAgICAgICAgICAgLCAnZWl0J1xuXG4gICAgICAgICAgICAgICAgLCAnZW1vamlfZmlsbCdcblxuICAgICAgICAgICAgICAgICwgJ2Vtb2ppJ1xuXG4gICAgICAgICAgICAgICAgLCAnZW50ZXInXG5cbiAgICAgICAgICAgICAgICAsICdlbnRlcmludG8nXG5cbiAgICAgICAgICAgICAgICAsICdlbnRlcmludG9fZmlsbCdcblxuICAgICAgICAgICAgICAgICwgJ2ZlZWRiYWNrX2ZpbGwnXG5cbiAgICAgICAgICAgICAgICAsICdmZWVkYmFjaydcblxuICAgICAgICAgICAgICAgICwgJ2ZsYWdfZmlsbCdcblxuICAgICAgICAgICAgICAgICwgJ2ZsYWcnXG5cbiAgICAgICAgICAgICAgICAsICdmbGFzaGxpZ2h0J1xuXG4gICAgICAgICAgICAgICAgLCAnZmxhc2hsaWdodF9maWxsJ1xuXG4gICAgICAgICAgICAgICAgLCAnZnVsbHNjcmVlbidcblxuICAgICAgICAgICAgICAgICwgJ2dyb3VwJ1xuXG4gICAgICAgICAgICAgICAgLCAnZ3JvdXBfZmlsbCdcblxuICAgICAgICAgICAgICAgICwgJ2hvbWVwYWdlX2ZpbGwnXG5cbiAgICAgICAgICAgICAgICAsICdob21lcGFnZSdcblxuICAgICAgICAgICAgICAgICwgJ2ludGVncmFsX2ZpbGwnXG5cbiAgICAgICAgICAgICAgICAsICdpbnRlZ3JhbCdcblxuICAgICAgICAgICAgICAgICwgJ2ludGVyYWN0aXZlX2ZpbGwnXG5cbiAgICAgICAgICAgICAgICAsICdpbnRlcmFjdGl2ZSdcblxuICAgICAgICAgICAgICAgICwgJ2tleWJvYXJkJ1xuXG4gICAgICAgICAgICAgICAgLCAnbGFiZWwnXG5cbiAgICAgICAgICAgICAgICAsICdsYWJlbF9maWxsJ1xuXG4gICAgICAgICAgICAgICAgLCAnbGlrZV9maWxsJ1xuXG4gICAgICAgICAgICAgICAgLCAnbGlrZSdcblxuICAgICAgICAgICAgICAgICwgJ2xpdmVfZmlsbCdcblxuICAgICAgICAgICAgICAgICwgJ2xpdmUnXG5cbiAgICAgICAgICAgICAgICAsICdsb2NrX2ZpbGwnXG5cbiAgICAgICAgICAgICAgICAsICdsb2NrJ1xuXG4gICAgICAgICAgICAgICAgLCAnbWFpbCdcblxuICAgICAgICAgICAgICAgICwgJ21haWxfZmlsbCdcblxuICAgICAgICAgICAgICAgICwgJ21lc3NhZ2UnXG5cbiAgICAgICAgICAgICAgICAsICdtZXNzYWdlX2ZpbGwnXG5cbiAgICAgICAgICAgICAgICAsICdtaW5lJ1xuXG4gICAgICAgICAgICAgICAgLCAnbWluZV9maWxsJ1xuXG4gICAgICAgICAgICAgICAgLCAnbW9iaWxlcGhvbmVfZmlsbCdcblxuICAgICAgICAgICAgICAgICwgJ21vYmlsZXBob25lJ1xuXG4gICAgICAgICAgICAgICAgLCAnbW9yZSdcblxuICAgICAgICAgICAgICAgICwgJ25hcnJvdydcblxuICAgICAgICAgICAgICAgICwgJ29mZmxpbmVfZmlsbCdcblxuICAgICAgICAgICAgICAgICwgJ29mZmxpbmUnXG5cbiAgICAgICAgICAgICAgICAsICdvdGhlcidcblxuICAgICAgICAgICAgICAgICwgJ3BpY3R1cmVfZmlsbCdcblxuICAgICAgICAgICAgICAgICwgJ3BpY3R1cmUnXG5cbiAgICAgICAgICAgICAgICAsICdwbGF5J1xuXG4gICAgICAgICAgICAgICAgLCAncGxheV9maWxsJ1xuXG4gICAgICAgICAgICAgICAgLCAncGxheW9uX2ZpbGwnXG5cbiAgICAgICAgICAgICAgICAsICdwbGF5b24nXG5cbiAgICAgICAgICAgICAgICAsICdwcmFpc2VfZmlsbCdcblxuICAgICAgICAgICAgICAgICwgJ3ByYWlzZSdcblxuICAgICAgICAgICAgICAgICwgJ3Byb21wdF9maWxsJ1xuXG4gICAgICAgICAgICAgICAgLCAncHJvbXB0J1xuXG4gICAgICAgICAgICAgICAgLCAncmVkcGFja2V0X2ZpbGwnXG5cbiAgICAgICAgICAgICAgICAsICdyZWRwYWNrZXQnXG5cbiAgICAgICAgICAgICAgICAsICdyZWZyZXNoJ1xuXG4gICAgICAgICAgICAgICAgLCAncmVtaW5kX2ZpbGwnXG5cbiAgICAgICAgICAgICAgICAsICdyZW1pbmQnXG5cbiAgICAgICAgICAgICAgICAsICdyZXR1cm4nXG5cbiAgICAgICAgICAgICAgICAsICdyaWdodCdcblxuICAgICAgICAgICAgICAgICwgJ3NjYW4nXG5cbiAgICAgICAgICAgICAgICAsICdzZW5kJ1xuXG4gICAgICAgICAgICAgICAgLCAnc2VydmljZV9maWxsJ1xuXG4gICAgICAgICAgICAgICAgLCAnc2VydmljZSdcblxuICAgICAgICAgICAgICAgICwgJ3NldHVwX2ZpbGwnXG5cbiAgICAgICAgICAgICAgICAsICdzZXR1cCdcblxuICAgICAgICAgICAgICAgICwgJ3NoYXJlX2ZpbGwnXG5cbiAgICAgICAgICAgICAgICAsICdzaGFyZSdcblxuICAgICAgICAgICAgICAgICwgJ3N1Y2Nlc3NfZmlsbCdcblxuICAgICAgICAgICAgICAgICwgJ3N1Y2Nlc3MnXG5cbiAgICAgICAgICAgICAgICAsICdzdXNwZW5kJ1xuXG4gICAgICAgICAgICAgICAgLCAnc3dpdGNoJ1xuXG4gICAgICAgICAgICAgICAgLCAnc3lzdGVtcHJvbXB0X2ZpbGwnXG5cbiAgICAgICAgICAgICAgICAsICdzeXN0ZW1wcm9tcHQnXG5cbiAgICAgICAgICAgICAgICAsICd0YWlsb3InXG5cbiAgICAgICAgICAgICAgICAsICd0YXNrJ1xuXG4gICAgICAgICAgICAgICAgLCAndGFza19maWxsJ1xuXG4gICAgICAgICAgICAgICAgLCAndGFza2xpc3RfZmlsbCdcblxuICAgICAgICAgICAgICAgICwgJ3Rhc2tsaXN0J1xuXG4gICAgICAgICAgICAgICAgLCAndGltZV9maWxsJ1xuXG4gICAgICAgICAgICAgICAgLCAndGltZSdcblxuICAgICAgICAgICAgICAgICwgJ3RyYW5zbGF0aW9uX2ZpbGwnXG5cbiAgICAgICAgICAgICAgICAsICd0cmFuc2xhdGlvbidcblxuICAgICAgICAgICAgICAgICwgJ3RyYXNoJ1xuXG4gICAgICAgICAgICAgICAgLCAndHJhc2hfZmlsbCdcblxuICAgICAgICAgICAgICAgICwgJ3VuZG8nXG5cbiAgICAgICAgICAgICAgICAsICd2aWRlbydcblxuICAgICAgICAgICAgICAgICwgJ3ZpZGVvX2ZpbGwnXG5cbiAgICAgICAgICAgICAgICAsICd3YXJuaW5nX2ZpbGwnXG5cbiAgICAgICAgICAgICAgICAsICd3YXJuaW5nJ1xuXG4gICAgICAgICAgICAgICAgLCAnc2VhcmNoJ1xuXG4gICAgICAgICAgICAgICAgLCAnc2VhcmNoZmlsbCdcblxuICAgICAgICAgICAgICAgICwgJ3B1Ymxpc2hnb29kc19maWxsJ1xuXG4gICAgICAgICAgICAgICAgLCAnc2hvcF9maWxsJ1xuXG4gICAgICAgICAgICAgICAgLCAndHJhbnNhY3Rpb25fZmlsbCdcblxuICAgICAgICAgICAgICAgICwgJ3BhY2t1cCdcblxuICAgICAgICAgICAgICAgICwgJ3VuZm9sZCdcblxuICAgICAgICAgICAgICAgICwgJ2ZpbmFuY2lhbF9maWxsJ1xuXG4gICAgICAgICAgICAgICAgLCAnY29tbW9kaXR5J11cbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICAgICAgc3VwZXIoKVxuICAgICAgICB9XG4gICAgfVxuIl19