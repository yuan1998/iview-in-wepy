<style lang="less">
    
</style>

<template>
    <i-panel title="group-水果">
        <i-checkbox-group current="{{current}}" @change="handleFruitChange">
            <repeat for="{{fruit}}" key="{{item.id}}" index="index" item="item">
                <i-checkbox position="{{position}}" value="{{item.name}}"></i-checkbox>
            </repeat>
        </i-checkbox-group>
    </i-panel>

    <i-button @click="handleClick" type="ghost">切换复选框位置</i-button>

    <i-panel title="checkbox-动物">
        <i-checkbox value="{{animal}}" disabled="{{disabled}}" checked="{{checked}}" @change="handleAnimalChange">
        </i-checkbox>
    </i-panel>

    <i-button @click="handleDisabled" type="ghost">切换disabled状态</i-button>

</template>

<script>
    import wepy from "wepy"

    export default class checkbox extends wepy.page {
        config = {
            navigationBarTitleText : "Checkbox 多选框",
            usingComponents: {
                'i-panel' : '../iview/panel/index',
                'i-checkbox' : '../iview/checkbox/index',
                'i-checkbox-group' : '../iview/checkbox-group/index',
                'i-button' : '../iview/button/index',

            }
        }

        data = {
            fruit: [{
                id: 1,
                name: '香蕉',
            }, {
                id: 2,
                name: '苹果'
            }, {
                id: 3,
                name: '西瓜'
            }, {
                id: 4,
                name: '葡萄',
            }],
            current: ['苹果', '葡萄'],
            position: 'left',
            animal: '熊猫',
            checked: false,
            disabled: false,
        }



        methods = {
            handleFruitChange({ detail = {} }) {
                const index = this.data.current.indexOf(detail.value);
                index === -1 ? this.current.push(detail.value) : this.current.splice(index, 1);
            },
            handleClick() {
                this.position = this.position.indexOf('left') !== -1 ? 'right' : 'left';
            },
            handleDisabled() {
                this.disabled = !this.disabled;
            },
            handleAnimalChange({ detail = {} }) {
                this.checked = detail.current;
            },
        }
        
        constructor ()
        {
            super()
        }
    }
</script>  
